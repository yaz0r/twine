# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/twin-e
pkglibdir = $(libdir)/twin-e
pkgincludedir = $(includedir)/twin-e
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = aclocal
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/yazoo/code/twin-e/missing --run tar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -I/usr/include/SDL -D_REENTRANT
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATAPATH = ${prefix}/share/twin-e
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EMPTY_FILE = /dev/null
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS =  -L/usr/lib -lSDL -lpthread -lSDL_mixer -lz
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/yazoo/code/twin-e/missing --run makeinfo
MKDIR = mkdir -p
OBJEXT = o
PACKAGE = twin-e
PACKAGE_BUGREPORT = 
PACKAGE_NAME = twin-e
PACKAGE_STRING = twin-e 0.1
PACKAGE_TARNAME = twin-e
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PROFILE = 
RM = rm -f
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lpthread -lSDL_mixer
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
USE_PCH = no
VERSION = 0.1
WARNINGS = -Wall
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/yazoo/code/twin-e/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
bin_PROGRAMS = twin-e 
twin_e_SOURCES = \
actorScript.c \
actors.c \
angle.c \
angle.h \
angleTable.c \
angleTable.h \
anim.c \
animAction.c \
body.c \
cdrom.c \
comportementMenu.c \
costume.c \
costume.h \
cube.c \
decomp.c \
decomp.h \
debug.c \
debug.h \
extra.c \
extraData.h \
expand.c \
file.c \
fireEffect.c \
fichePerso.c \
flaplayer.c \
font.c \
fullRedraw.c \
global.c \
global.h \
hqr.c \
HQMGlobal.c \
HQMLib.c \
HQMLib.h \
HQRlib.c \
HQRlib.h \
images.c \
init.c \
input.c \
inventory.c \
lba.h \
life_ascii.c \
life_binary.c \
life_common.c \
life_common.h \
main.c \
mainLoop.c \
mainMenu.c \
mainSDL.c \
memory.c \
moveActor.c \
music.c \
object.c \
osystem.h \
overlay.c \
overlay.h \
renderer.c \
room.c \
samples.c \
samples.h \
save.c \
shadow.c \
streamReader.c \
streamReader.h \
sys.c \
text.c \
threadCode.c \
time.c \
type.h \
vars.c \
vars.h \
video.c \
vox.c \
zones.c \
zones.h

subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = twin-e$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_twin_e_OBJECTS = actorScript.$(OBJEXT) actors.$(OBJEXT) \
	angle.$(OBJEXT) angleTable.$(OBJEXT) anim.$(OBJEXT) \
	animAction.$(OBJEXT) body.$(OBJEXT) cdrom.$(OBJEXT) \
	comportementMenu.$(OBJEXT) costume.$(OBJEXT) cube.$(OBJEXT) \
	decomp.$(OBJEXT) debug.$(OBJEXT) extra.$(OBJEXT) \
	expand.$(OBJEXT) file.$(OBJEXT) fireEffect.$(OBJEXT) \
	fichePerso.$(OBJEXT) flaplayer.$(OBJEXT) font.$(OBJEXT) \
	fullRedraw.$(OBJEXT) global.$(OBJEXT) hqr.$(OBJEXT) \
	HQMGlobal.$(OBJEXT) HQMLib.$(OBJEXT) HQRlib.$(OBJEXT) \
	images.$(OBJEXT) init.$(OBJEXT) input.$(OBJEXT) \
	inventory.$(OBJEXT) life_ascii.$(OBJEXT) life_binary.$(OBJEXT) \
	life_common.$(OBJEXT) main.$(OBJEXT) mainLoop.$(OBJEXT) \
	mainMenu.$(OBJEXT) mainSDL.$(OBJEXT) memory.$(OBJEXT) \
	moveActor.$(OBJEXT) music.$(OBJEXT) object.$(OBJEXT) \
	overlay.$(OBJEXT) renderer.$(OBJEXT) room.$(OBJEXT) \
	samples.$(OBJEXT) save.$(OBJEXT) shadow.$(OBJEXT) \
	streamReader.$(OBJEXT) sys.$(OBJEXT) text.$(OBJEXT) \
	threadCode.$(OBJEXT) time.$(OBJEXT) vars.$(OBJEXT) \
	video.$(OBJEXT) vox.$(OBJEXT) zones.$(OBJEXT)
twin_e_OBJECTS = $(am_twin_e_OBJECTS)
twin_e_LDADD = $(LDADD)
twin_e_DEPENDENCIES =
twin_e_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/HQMGlobal.Po ./$(DEPDIR)/HQMLib.Po \
	./$(DEPDIR)/HQRlib.Po ./$(DEPDIR)/actorScript.Po \
	./$(DEPDIR)/actors.Po ./$(DEPDIR)/angle.Po \
	./$(DEPDIR)/angleTable.Po ./$(DEPDIR)/anim.Po \
	./$(DEPDIR)/animAction.Po ./$(DEPDIR)/body.Po \
	./$(DEPDIR)/cdrom.Po \
	./$(DEPDIR)/comportementMenu.Po \
	./$(DEPDIR)/costume.Po ./$(DEPDIR)/cube.Po \
	./$(DEPDIR)/debug.Po ./$(DEPDIR)/decomp.Po \
	./$(DEPDIR)/expand.Po ./$(DEPDIR)/extra.Po \
	./$(DEPDIR)/fichePerso.Po ./$(DEPDIR)/file.Po \
	./$(DEPDIR)/fireEffect.Po ./$(DEPDIR)/flaplayer.Po \
	./$(DEPDIR)/font.Po ./$(DEPDIR)/fullRedraw.Po \
	./$(DEPDIR)/global.Po ./$(DEPDIR)/hqr.Po \
	./$(DEPDIR)/images.Po ./$(DEPDIR)/init.Po \
	./$(DEPDIR)/input.Po ./$(DEPDIR)/inventory.Po \
	./$(DEPDIR)/life_ascii.Po \
	./$(DEPDIR)/life_binary.Po \
	./$(DEPDIR)/life_common.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/mainLoop.Po ./$(DEPDIR)/mainMenu.Po \
	./$(DEPDIR)/mainSDL.Po ./$(DEPDIR)/memory.Po \
	./$(DEPDIR)/moveActor.Po ./$(DEPDIR)/music.Po \
	./$(DEPDIR)/object.Po ./$(DEPDIR)/overlay.Po \
	./$(DEPDIR)/renderer.Po ./$(DEPDIR)/room.Po \
	./$(DEPDIR)/samples.Po ./$(DEPDIR)/save.Po \
	./$(DEPDIR)/shadow.Po ./$(DEPDIR)/streamReader.Po \
	./$(DEPDIR)/sys.Po ./$(DEPDIR)/text.Po \
	./$(DEPDIR)/threadCode.Po ./$(DEPDIR)/time.Po \
	./$(DEPDIR)/vars.Po ./$(DEPDIR)/video.Po \
	./$(DEPDIR)/vox.Po ./$(DEPDIR)/zones.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(twin_e_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am config.h.in
SOURCES = $(twin_e_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .gch .h .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
twin-e$(EXEEXT): $(twin_e_OBJECTS) $(twin_e_DEPENDENCIES) 
	@rm -f twin-e$(EXEEXT)
	$(LINK) $(twin_e_LDFLAGS) $(twin_e_OBJECTS) $(twin_e_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/HQMGlobal.Po
include ./$(DEPDIR)/HQMLib.Po
include ./$(DEPDIR)/HQRlib.Po
include ./$(DEPDIR)/actorScript.Po
include ./$(DEPDIR)/actors.Po
include ./$(DEPDIR)/angle.Po
include ./$(DEPDIR)/angleTable.Po
include ./$(DEPDIR)/anim.Po
include ./$(DEPDIR)/animAction.Po
include ./$(DEPDIR)/body.Po
include ./$(DEPDIR)/cdrom.Po
include ./$(DEPDIR)/comportementMenu.Po
include ./$(DEPDIR)/costume.Po
include ./$(DEPDIR)/cube.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/decomp.Po
include ./$(DEPDIR)/expand.Po
include ./$(DEPDIR)/extra.Po
include ./$(DEPDIR)/fichePerso.Po
include ./$(DEPDIR)/file.Po
include ./$(DEPDIR)/fireEffect.Po
include ./$(DEPDIR)/flaplayer.Po
include ./$(DEPDIR)/font.Po
include ./$(DEPDIR)/fullRedraw.Po
include ./$(DEPDIR)/global.Po
include ./$(DEPDIR)/hqr.Po
include ./$(DEPDIR)/images.Po
include ./$(DEPDIR)/init.Po
include ./$(DEPDIR)/input.Po
include ./$(DEPDIR)/inventory.Po
include ./$(DEPDIR)/life_ascii.Po
include ./$(DEPDIR)/life_binary.Po
include ./$(DEPDIR)/life_common.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mainLoop.Po
include ./$(DEPDIR)/mainMenu.Po
include ./$(DEPDIR)/mainSDL.Po
include ./$(DEPDIR)/memory.Po
include ./$(DEPDIR)/moveActor.Po
include ./$(DEPDIR)/music.Po
include ./$(DEPDIR)/object.Po
include ./$(DEPDIR)/overlay.Po
include ./$(DEPDIR)/renderer.Po
include ./$(DEPDIR)/room.Po
include ./$(DEPDIR)/samples.Po
include ./$(DEPDIR)/save.Po
include ./$(DEPDIR)/shadow.Po
include ./$(DEPDIR)/streamReader.Po
include ./$(DEPDIR)/sys.Po
include ./$(DEPDIR)/text.Po
include ./$(DEPDIR)/threadCode.Po
include ./$(DEPDIR)/time.Po
include ./$(DEPDIR)/vars.Po
include ./$(DEPDIR)/video.Po
include ./$(DEPDIR)/vox.Po
include ./$(DEPDIR)/zones.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

.h.gch: 
	$(CXXCOMPILE) $<
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
